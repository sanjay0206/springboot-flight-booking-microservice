spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/springboot-flight-booking-realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt:
  auth:
    converter:
      resource-id: booking-auth
      principle-attribute: peter

  cloud:
    gateway:
      routes:
        ## Flight Service Route
        - id: flight-service
          uri: http://localhost:8082
          predicates:
            - Path=/flight-service/v1/api/flights

        ## Flight Search Service Route
        - id: flight-search-service
          uri: http://localhost:8083
          predicates:
            - Path=/flight-search-service/v1/api/search/**
          filters:
            - name: CircuitBreaker
              args:
                name: flight-search-service
                fallbackuri: forward:/flightSearchServiceFallBack

        ## Booking Service Route
        - id: booking-service
          uri: http://localhost:8081
          predicates:
            - Path=/booking-service/v1/api/bookings/**
          filters:
            - name: CircuitBreaker
              args:
                name: booking-service
                fallbackuri: forward:/bookingServiceFallBack

        ## Payment Service Route
        - id: payment-service
          uri: http://localhost:8084
          predicates:
            - Path=/v1/api/payments

keycloak:
  realm: springboot-flight-booking-realm
  domain: localhost:8080
  adminClientId: admin-cli
  adminClientSecret: qx9Y3TWgoqbitbahJa8AthZyxkZmxdy1
  clientId: booking-auth
  urls:
    auth: http://${keycloak.domain}
